apply plugin: 'com.android.application'
apply plugin: 'com.jakewharton.butterknife'
apply plugin: 'com.alibaba.arouter'
import org.aspectj.bridge.IMessage
import org.aspectj.bridge.MessageHandler
import org.aspectj.tools.ajc.Main

android {
    compileSdkVersion rootProject.ext.android["compileSdkVersion"]
    buildToolsVersion rootProject.ext.android["buildToolsVersion"]

    defaultConfig {

        applicationId "com.dayouzc.e2eapp.ebusiness.checkin"
        minSdkVersion rootProject.ext.android["minSdkVersion"]
        targetSdkVersion rootProject.ext.android["targetSdkVersion"]
        versionCode rootProject.ext.android["versionCode"]
        versionName rootProject.ext.android["versionName"]

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }

        multiDexEnabled true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        //就算您使用 AndroidStudio v3.0, 也需要配置以下参数
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }

    aaptOptions {
        cruncherEnabled = false
    }
    lintOptions {
        abortOnError false
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }

    configurations {
        all*.exclude group: 'xmlpull', module: 'xmlpull'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    implementation 'me.jessyan:arms:2.5.2'
    //想使用 Glide 请依赖 arms-imageloader-glide 扩展库, 使用方式请看 #4.1
    implementation 'me.jessyan:arms-imageloader-glide:2.5.2'

//想使用 AndroidAutoLayout 请依赖 arms-autolayout 扩展库, 使用方式请查看 #4.2
    implementation 'me.jessyan:arms-autolayout:2.5.2'
    implementation 'com.dayouzc.android.framework:e2e-android-common-framework:2.0.0-SNAPSHOT'
    implementation 'com.dayouzc.android.framework:e2e-android-common-aop:2.0.0-SNAPSHOT'
    implementation 'com.dayouzc.e2eapp.mcard:e2e-app-mcard-sdk:2.0.0-SNAPSHOT'
    implementation 'com.dayouzc.e2eapp.ebusiness:e2e-app-ebusiness-sdk:2.0.0-SNAPSHOT'
    testImplementation rootProject.ext.dependencies["junit"]
    implementation rootProject.ext.dependencies["support-v4"]
    implementation rootProject.ext.dependencies["gson"]
    implementation rootProject.ext.dependencies["retrofit-converter-gson"]
    implementation rootProject.ext.dependencies["cardview-v7"]
    implementation rootProject.ext.dependencies["autosize"]
    implementation rootProject.ext.dependencies["butterknife"]
    implementation rootProject.ext.dependencies["androideventbus"]
    implementation rootProject.ext.dependencies["annotations"]
    implementation rootProject.ext.dependencies["dagger2"]
    implementation rootProject.ext.dependencies["retrofit"]
    annotationProcessor rootProject.ext.dependencies["butterknife-compiler"]
    //Butterknife 插件, 很多人因为没加这个而报错, 切记!!!
    annotationProcessor rootProject.ext.dependencies["dagger2-compiler"]//依赖插件

    implementation 'com.android.support:multidex:1.0.3'
    implementation 'com.journeyapps:zxing-android-embedded:3.5.0'

    implementation 'org.aspectj:aspectjrt:1.9.2'
    implementation 'org.apache.mina:mina-core:2.0.4'
    implementation 'jcifs:jcifs:1.3.17'
    implementation 'de.hdodenhof:circleimageview:3.1.0'
    implementation 'me.shaohui:bottomdialog:1.1.9'
    implementation 'com.github.PhilJay:MPAndroidChart:v3.1.0'
    implementation 'com.alibaba:arouter-api:1.5.0'
    annotationProcessor 'com.alibaba:arouter-compiler:1.2.2'

    if (!Boolean.valueOf(rootProject.ext.isModule)) {
        implementation project(':e2e-component-biz-checkin-vertical')
    }



}

//定义Gardle依赖的更新时间
configurations.all {
    resolutionStrategy.cacheDynamicVersionsFor 60, 'minutes' // 动态版本
    resolutionStrategy.cacheChangingModulesFor 0, 'minutes' // 变化模块
}



//以下为AOP相关代码
buildscript {
    repositories {
        maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
    }
    dependencies {
        classpath 'org.aspectj:aspectjtools:1.9.2'
    }
}
final def log = project.logger
final def variants = project.android.applicationVariants
//在构建工程时，执行编织
variants.all { variant ->
    JavaCompile javaCompile = variant.javaCompile
    javaCompile.doLast {
        String[] args = ["-showWeaveInfo",
                         "-1.5",
                         "-inpath", javaCompile.destinationDir.toString(),
                         "-aspectpath", javaCompile.classpath.asPath,
                         "-d", javaCompile.destinationDir.toString(),
                         "-classpath", javaCompile.classpath.asPath,
                         "-bootclasspath", project.android.bootClasspath.join(File.pathSeparator)]
        log.debug "ajc args: " + Arrays.toString(args)

        MessageHandler handler = new MessageHandler(true);
        new Main().run(args, handler);
        for (IMessage message : handler.getMessages(null, true)) {
            switch (message.getKind()) {
                case IMessage.ABORT:
                case IMessage.ERROR:
                case IMessage.FAIL:
                    log.error message.message, message.thrown
                    break;
                case IMessage.WARNING:
                    log.warn message.message, message.thrown
                    break;
                case IMessage.INFO:
                    log.info message.message, message.thrown
                    break;
                case IMessage.DEBUG:
                    log.debug message.message, message.thrown
                    break;
            }
        }
    }
}
